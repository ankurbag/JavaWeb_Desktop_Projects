/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.neu.userinterface.DoctorRole;

import com.neu.business.EcoSystem;
import com.neu.business.enterprise.Enterprise;
import com.neu.business.organization.DoctorOrganization;
import com.neu.business.userAccount.UserAccount;
import com.neu.business.workQueue.AppointmentRequest;
import com.neu.business.workQueue.WorkRequest;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JPanel;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class DoctorAdminDashboard extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
    private UserAccount userAccount;
    DoctorOrganization organization;
    DateFormat df;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public DoctorAdminDashboard(JPanel userProcessContainer, EcoSystem system) {

    }

    public DoctorAdminDashboard(EcoSystem ecoSystem, UserAccount userAccount,
            DoctorOrganization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        this.userAccount = userAccount;
        this.organization = organization;
        df = new SimpleDateFormat("EEE MMM dd, yyyy");
        populateRequestTable();
        populateScheduleTable();
    }

    public void populateScheduleTable() {
        DefaultTableModel model = (DefaultTableModel) scheduleTable.getModel();
        HashMap<String, ArrayList> mySchedule = (HashMap) userAccount.getEmployee().getSchedule();
        model.setRowCount(0);
        for (Map.Entry<String, ArrayList> entry : mySchedule.entrySet()) {
            String key = entry.getKey();
            ArrayList shiftTimings = entry.getValue();

            Object[] row = new Object[4];
            row[0] = key;
            ArrayList<String> tempList = new ArrayList<String>();
            for (int i = 0; i < shiftTimings.size() - 1; i++) {
                tempList.add((String) shiftTimings.get(i));
            }

            row[1] = tempList;
            model.addRow(row);

        }
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) requestTable.getModel();

        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            if (request instanceof AppointmentRequest) {
                AppointmentRequest request1 = (AppointmentRequest) request;
                String time = request1.getAppointmentSlot();
                time = time.substring(0, time.indexOf('-')).trim();
                Date nd = null;
                try {
                    nd = df.parse(time);
                } catch (ParseException ex) {
                    Logger.getLogger(DoctorAdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
                }
                Date dt = new Date();

                if (dt.before(nd) && request.getStatus().equalsIgnoreCase("Requested")
                        ) {
                    Object[] row = new Object[4];
                    row[0] = request;
                    row[1] = request.getStatus();
                    row[2] = request.getStatus();
                    model.addRow(row);
                }

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headingLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        scheduleTable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        cancelBtn = new javax.swing.JButton();
        confirmBtn = new javax.swing.JButton();
        headingLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder1 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder1.setShowLeftShadow(true);
        dropShadowBorder1.setShowTopShadow(true);
        setBorder(dropShadowBorder1);
        setPreferredSize(new java.awt.Dimension(418, 537));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headingLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        headingLabel3.setText("My Schedule");
        add(headingLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder2 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder2.setShadowColor(new java.awt.Color(204, 204, 204));
        dropShadowBorder2.setShowLeftShadow(true);
        dropShadowBorder2.setShowTopShadow(true);
        jPanel5.setBorder(dropShadowBorder2);
        jPanel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel5.setPreferredSize(new java.awt.Dimension(418, 220));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scheduleTable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        scheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "<html><b>Day</b></html>", "<html><b>Time Slot</b></html>"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(scheduleTable);
        if (scheduleTable.getColumnModel().getColumnCount() > 0) {
            scheduleTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        jPanel5.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 290, 110));

        add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 320, 140));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder3 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder3.setShadowColor(new java.awt.Color(204, 204, 204));
        dropShadowBorder3.setShowLeftShadow(true);
        dropShadowBorder3.setShowTopShadow(true);
        jPanel6.setBorder(dropShadowBorder3);
        jPanel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel6.setPreferredSize(new java.awt.Dimension(418, 220));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestTable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "<html><b>Time</b></html>", "<html><b>Status</b></html>"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(requestTable);
        if (requestTable.getColumnModel().getColumnCount() > 0) {
            requestTable.getColumnModel().getColumn(0).setPreferredWidth(200);
        }

        jPanel6.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 290, 150));

        cancelBtn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cancelBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imgs/Button-Close-icon.png"))); // NOI18N
        cancelBtn.setText("Cancel ");
        cancelBtn.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        jPanel6.add(cancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 180, 120, 40));

        confirmBtn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        confirmBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imgs/Button-Ok-icon.png"))); // NOI18N
        confirmBtn.setText("Confirm ");
        confirmBtn.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });
        jPanel6.add(confirmBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 110, 40));

        add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 320, 240));

        headingLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        headingLabel4.setText("My Appointments");
        add(headingLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 197, -1, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        if (requestTable.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Please Select an appointment");
            return;
        }
        if (JOptionPane.showConfirmDialog(null, "Are you Sure?", "Cancel Appointment", JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION) {
            WorkRequest request = (WorkRequest) requestTable.getValueAt(requestTable.getSelectedRow(), 0);
            request.setStatus("Cancelled");
            request.setReceiver(userAccount);
            request.setMessage("Sorry to cancel");

        }else{
            
        }
        //userAccount.getWorkQueue().getWorkRequestList().add(request);

        populateRequestTable();
        //Send Notification
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        // TODO add your handling code here:
        if (requestTable.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Please Select an appointment");
            return;
        }

        WorkRequest request = (WorkRequest) requestTable.getValueAt(requestTable.getSelectedRow(), 0);
        request.setStatus("Confirmed");
        request.setReceiver(userAccount);

        JOptionPane.showMessageDialog(null, "Confirmed!!!");
        populateRequestTable();
        //Send Notification
    }//GEN-LAST:event_confirmBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JLabel headingLabel3;
    private javax.swing.JLabel headingLabel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable requestTable;
    private javax.swing.JTable scheduleTable;
    // End of variables declaration//GEN-END:variables
}
